/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bookstore;
import java.awt.event.KeyEvent;
import java.util.Arrays;
import javax.swing.JComponent;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPasswordField;
/**
 *
 * @author 72dabriks
 */
public class Signup extends javax.swing.JFrame {
    
    /**
     * Creates new form Signup
     */
    public Signup() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        AdminCheck = new javax.swing.JCheckBox();
        OKButton = new javax.swing.JButton();
        LoginText = new javax.swing.JTextField();
        PasswordField = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Sugn up");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));
        jPanel1.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Sign up");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jPanel1.add(jLabel1);
        jLabel1.setBounds(111, 28, 222, 51);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Login");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(80, 120, 56, 38);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Password");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(36, 179, 101, 29);

        AdminCheck.setBackground(new java.awt.Color(0, 0, 0));
        AdminCheck.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        AdminCheck.setForeground(new java.awt.Color(255, 255, 255));
        AdminCheck.setText("Admin");
        jPanel1.add(AdminCheck);
        AdminCheck.setBounds(36, 250, 93, 33);

        OKButton.setBackground(new java.awt.Color(0, 0, 0));
        OKButton.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        OKButton.setForeground(new java.awt.Color(255, 255, 255));
        OKButton.setText("OK");
        OKButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OKButtonActionPerformed(evt);
            }
        });
        jPanel1.add(OKButton);
        OKButton.setBounds(270, 250, 80, 50);

        LoginText.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        LoginText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                LoginTextKeyPressed(evt);
            }
        });
        jPanel1.add(LoginText);
        LoginText.setBounds(150, 120, 200, 40);

        PasswordField.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        PasswordField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                PasswordFieldKeyPressed(evt);
            }
        });
        jPanel1.add(PasswordField);
        PasswordField.setBounds(150, 170, 200, 40);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 444, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 337, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    // Signing up
    
    private void OKButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OKButtonActionPerformed
        // TODO add your handling code here:
        InitSignup();
    }//GEN-LAST:event_OKButtonActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
        Main.signupup = false;
    }//GEN-LAST:event_formWindowClosed

    private void PasswordFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_PasswordFieldKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER) {
            InitSignup();
        }
    }//GEN-LAST:event_PasswordFieldKeyPressed

    private void LoginTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_LoginTextKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER) {
            InitSignup();
        }
    }//GEN-LAST:event_LoginTextKeyPressed

    private void InitSignup(){
        
        String login = LoginText.getText();
        char[] password = PasswordField.getPassword();
        DialogFrame button = new DialogFrame();
        
        if(login.trim().isEmpty() || password.length == 0){
            
                
                JOptionPane.showMessageDialog(
                        button, "No input in login or password",
                        "ERROR",
                        JOptionPane.ERROR_MESSAGE);
            
        }
        else{
            boolean contains = false;
            for (char c : password) {
                if (c == ' ') {
                    contains = true;
                    break;
                }
            }
            
            if(login.contains(" ") || contains){
                JOptionPane.showMessageDialog(
                        button, "Password and login cannot contain spaces",
                        "ERROR",
                        JOptionPane.ERROR_MESSAGE);
            }
            else{
                boolean nouser = true;

                // Checking if user already exists

                for(User user : Bookstore.users){
                    if(login.toLowerCase().equals(user.login))
                        nouser = false;
                }

                if(nouser){
                    dispose();
                    if(AdminCheck.isSelected()) {  // Checking for Admin

                        JPasswordField pf = new JPasswordField();
                        final JComponent[] inputs = new JComponent[] {
                                new JLabel("Enter admin password: "),
                                pf
                        };
                        int option = JOptionPane.showConfirmDialog(null, inputs, "Admin Password check ", JOptionPane.OK_CANCEL_OPTION);
                        if(option == JOptionPane.OK_OPTION){

                            char[] uadm_pswrd = pf.getPassword();

                            if(Arrays.equals(uadm_pswrd, User.a_pswrd)){

                                DBOps.addUser(login, password, true);
                                Log.newUserCreated(login);

                                JOptionPane.showMessageDialog(
                                    button, "Registration completed!",
                                    "Success", JOptionPane.PLAIN_MESSAGE);
                            }
                            else{

                                JOptionPane.showMessageDialog(
                                    button, "Incorrect admin password",
                                    "ERROR",
                                    JOptionPane.ERROR_MESSAGE);
                            }
                        }
                    } else {

                            DBOps.addUser(login, password, false);

                            JOptionPane.showMessageDialog(
                                button, "Registration completed!",
                                "Success", JOptionPane.PLAIN_MESSAGE);
                    }
                }
                else{
                            JOptionPane.showMessageDialog(
                                button, "User with that login already exists",
                                "ERROR",
                                JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }
    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox AdminCheck;
    private javax.swing.JTextField LoginText;
    private javax.swing.JButton OKButton;
    private javax.swing.JPasswordField PasswordField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
