/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bookstore;

import static bookstore.Main.currentuser;
import java.awt.CardLayout;
import java.util.Arrays;
import javax.swing.JComponent;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPasswordField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author IntrovertBoy
 */
public class CustomerW extends javax.swing.JFrame {

    /**
     * Creates new form CustomerW
     */
    private DefaultTableModel model;
    private DefaultTableModel model1;
    
    public CustomerW() {
        initComponents();
        model = (DefaultTableModel) Books.getModel();
        Books.setModel(model);
        for(Book book : Bookstore.books){
            model.addRow(new Object[]{book.title, book.author, book.price, book.qty});
        }
        username.setText(currentuser.login);
        
        model1 = (DefaultTableModel) Orders.getModel();
        Orders.setModel(model1);
        for(Order order : Bookstore.orders){
            for(Book book : Bookstore.books){
                if(currentuser.login.equals(order.user) && book.title.equals(order.book)){
                    model1.addRow(new Object[]{order.id, book.title, book.author, book.price});
                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BookDialog = new javax.swing.JDialog();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        TitleField = new javax.swing.JTextField();
        YearField = new javax.swing.JTextField();
        AuthorField = new javax.swing.JTextField();
        NrOfPagesField = new javax.swing.JTextField();
        GenreField = new javax.swing.JTextField();
        PriceField = new javax.swing.JTextField();
        CancelButton = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        QuantityField = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        DescriptionField = new javax.swing.JTextArea();
        mainPanel = new javax.swing.JPanel();
        ExitButton = new javax.swing.JButton();
        BrowseButton = new javax.swing.JButton();
        AccountButton = new javax.swing.JButton();
        cardPanel = new javax.swing.JPanel();
        browsePanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        Books = new javax.swing.JTable();
        SearchField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        OKButton = new javax.swing.JButton();
        OrderButton = new javax.swing.JButton();
        InfoButton = new javax.swing.JButton();
        accountPanel = new javax.swing.JPanel();
        username = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        CHPassword = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        Orders = new javax.swing.JTable();
        CancOrder = new javax.swing.JButton();
        DelAccount = new javax.swing.JButton();

        BookDialog.setTitle("Book Info");
        BookDialog.setResizable(false);
        BookDialog.setSize(new java.awt.Dimension(425, 535));

        jPanel2.setPreferredSize(new java.awt.Dimension(340, 365));

        jLabel2.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel2.setText("Title");

        jLabel5.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel5.setText("Author");

        jLabel6.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel6.setText("Number of pages");

        jLabel7.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel7.setText("Year");

        jLabel8.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel8.setText("Price");

        jLabel9.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel9.setText("Genre");

        TitleField.setEditable(false);
        TitleField.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N

        YearField.setEditable(false);
        YearField.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N

        AuthorField.setEditable(false);
        AuthorField.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N

        NrOfPagesField.setEditable(false);
        NrOfPagesField.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N

        GenreField.setEditable(false);
        GenreField.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N

        PriceField.setEditable(false);
        PriceField.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N

        CancelButton.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        CancelButton.setText("OK");
        CancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelButtonActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel10.setText("Quantity");

        QuantityField.setEditable(false);
        QuantityField.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N

        jLabel11.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel11.setText("Description");

        DescriptionField.setEditable(false);
        DescriptionField.setColumns(20);
        DescriptionField.setLineWrap(true);
        DescriptionField.setRows(5);
        DescriptionField.setWrapStyleWord(true);
        jScrollPane1.setViewportView(DescriptionField);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(38, 38, 38)
                                .addComponent(NrOfPagesField, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel11))
                                .addGap(80, 80, 80)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(YearField, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(GenreField, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(PriceField, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(QuantityField, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 191, Short.MAX_VALUE))
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(TitleField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 191, Short.MAX_VALUE)
                                        .addComponent(AuthorField))))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(162, 162, 162)
                        .addComponent(CancelButton)))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(TitleField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(AuthorField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(NrOfPagesField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(YearField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(GenreField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(PriceField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(QuantityField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 102, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(CancelButton)
                .addGap(17, 17, 17))
        );

        javax.swing.GroupLayout BookDialogLayout = new javax.swing.GroupLayout(BookDialog.getContentPane());
        BookDialog.getContentPane().setLayout(BookDialogLayout);
        BookDialogLayout.setHorizontalGroup(
            BookDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 410, Short.MAX_VALUE)
        );
        BookDialogLayout.setVerticalGroup(
            BookDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 535, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Customer Menu");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        mainPanel.setBackground(new java.awt.Color(255, 153, 102));

        ExitButton.setBackground(new java.awt.Color(255, 255, 255));
        ExitButton.setFont(new java.awt.Font("Impact", 1, 24)); // NOI18N
        ExitButton.setForeground(new java.awt.Color(0, 0, 0));
        ExitButton.setText("EXIT");
        ExitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitButtonActionPerformed(evt);
            }
        });

        BrowseButton.setBackground(new java.awt.Color(255, 153, 102));
        BrowseButton.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        BrowseButton.setForeground(new java.awt.Color(0, 0, 0));
        BrowseButton.setText("Browse");
        BrowseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BrowseButtonActionPerformed(evt);
            }
        });

        AccountButton.setBackground(new java.awt.Color(255, 153, 102));
        AccountButton.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        AccountButton.setForeground(new java.awt.Color(0, 0, 0));
        AccountButton.setText("Account");
        AccountButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AccountButtonActionPerformed(evt);
            }
        });

        cardPanel.setBackground(new java.awt.Color(255, 255, 255));
        cardPanel.setForeground(new java.awt.Color(0, 0, 0));
        cardPanel.setLayout(new java.awt.CardLayout());

        Books.setBackground(new java.awt.Color(255, 204, 204));
        Books.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        Books.setForeground(new java.awt.Color(0, 0, 0));
        Books.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title", "Author", "Price", "Quantity"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Books.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(Books);
        if (Books.getColumnModel().getColumnCount() > 0) {
            Books.getColumnModel().getColumn(0).setResizable(false);
            Books.getColumnModel().getColumn(1).setResizable(false);
            Books.getColumnModel().getColumn(2).setResizable(false);
            Books.getColumnModel().getColumn(3).setResizable(false);
        }

        SearchField.setBackground(new java.awt.Color(255, 255, 255));
        SearchField.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        SearchField.setForeground(new java.awt.Color(0, 0, 0));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Search:");

        OKButton.setBackground(new java.awt.Color(204, 204, 255));
        OKButton.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        OKButton.setForeground(new java.awt.Color(0, 0, 0));
        OKButton.setText("OK");
        OKButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        OKButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OKButtonActionPerformed(evt);
            }
        });

        OrderButton.setBackground(new java.awt.Color(204, 204, 255));
        OrderButton.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        OrderButton.setForeground(new java.awt.Color(0, 0, 0));
        OrderButton.setText("ORDER");
        OrderButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        OrderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OrderButtonActionPerformed(evt);
            }
        });

        InfoButton.setBackground(new java.awt.Color(204, 204, 255));
        InfoButton.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        InfoButton.setForeground(new java.awt.Color(0, 0, 0));
        InfoButton.setText("INFO");
        InfoButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        InfoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InfoButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout browsePanelLayout = new javax.swing.GroupLayout(browsePanel);
        browsePanel.setLayout(browsePanelLayout);
        browsePanelLayout.setHorizontalGroup(
            browsePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(browsePanelLayout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(SearchField, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(OKButton)
                .addGap(18, 18, 18)
                .addComponent(OrderButton)
                .addGap(18, 18, 18)
                .addComponent(InfoButton)
                .addContainerGap(75, Short.MAX_VALUE))
            .addComponent(jScrollPane2)
        );
        browsePanelLayout.setVerticalGroup(
            browsePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, browsePanelLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(browsePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SearchField, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(OKButton)
                    .addComponent(OrderButton)
                    .addComponent(InfoButton))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 259, Short.MAX_VALUE))
        );

        cardPanel.add(browsePanel, "browsePanel");

        username.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        username.setText("name");

        jLabel3.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        jLabel3.setText("Your Orders:");

        CHPassword.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        CHPassword.setText("Change Password");
        CHPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CHPasswordActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        jLabel4.setText("Username: ");

        Orders.setBackground(new java.awt.Color(255, 204, 204));
        Orders.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        Orders.setForeground(new java.awt.Color(0, 0, 0));
        Orders.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Order ID", "Title", "Author", "Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Orders.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(Orders);
        if (Orders.getColumnModel().getColumnCount() > 0) {
            Orders.getColumnModel().getColumn(0).setResizable(false);
            Orders.getColumnModel().getColumn(1).setResizable(false);
            Orders.getColumnModel().getColumn(2).setResizable(false);
            Orders.getColumnModel().getColumn(3).setResizable(false);
        }

        CancOrder.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        CancOrder.setText("Cancel Order");
        CancOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancOrderActionPerformed(evt);
            }
        });

        DelAccount.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        DelAccount.setForeground(new java.awt.Color(255, 0, 0));
        DelAccount.setText("Delete Account");
        DelAccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DelAccountActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout accountPanelLayout = new javax.swing.GroupLayout(accountPanel);
        accountPanel.setLayout(accountPanelLayout);
        accountPanelLayout.setHorizontalGroup(
            accountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(accountPanelLayout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addGroup(accountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(accountPanelLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(username))
                    .addComponent(jLabel3))
                .addGap(51, 51, 51)
                .addGroup(accountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(CHPassword)
                    .addGroup(accountPanelLayout.createSequentialGroup()
                        .addComponent(CancOrder)
                        .addGap(18, 18, 18)
                        .addComponent(DelAccount)))
                .addContainerGap(42, Short.MAX_VALUE))
            .addGroup(accountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 699, Short.MAX_VALUE))
        );
        accountPanelLayout.setVerticalGroup(
            accountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(accountPanelLayout.createSequentialGroup()
                .addGroup(accountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(accountPanelLayout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addGroup(accountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(username)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, accountPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(CHPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(accountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(CancOrder)
                    .addComponent(DelAccount, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(224, Short.MAX_VALUE))
            .addGroup(accountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, accountPanelLayout.createSequentialGroup()
                    .addGap(0, 137, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        cardPanel.add(accountPanel, "accountPanel");

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(ExitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(BrowseButton)
                .addGap(18, 18, 18)
                .addComponent(AccountButton)
                .addContainerGap())
            .addComponent(cardPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ExitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(AccountButton)
                            .addComponent(BrowseButton))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cardPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
        Main main = new Main();
        main.setVisible(true);
    }//GEN-LAST:event_formWindowClosed

    private void ExitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitButtonActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_ExitButtonActionPerformed

    private void BrowseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BrowseButtonActionPerformed
        // TODO add your handling code here:
        CardLayout card = (CardLayout)cardPanel.getLayout();
        card.show(cardPanel, "browsePanel");
    }//GEN-LAST:event_BrowseButtonActionPerformed

    private void AccountButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AccountButtonActionPerformed
        // TODO add your handling code here:
        CardLayout card = (CardLayout)cardPanel.getLayout();
        card.show(cardPanel, "accountPanel");
    }//GEN-LAST:event_AccountButtonActionPerformed

    private void OKButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OKButtonActionPerformed
        // TODO add your handling code here:
        model.setRowCount(0);
        String search = SearchField.getText();
        for(Book book : Bookstore.books){
            if(book.contains(search) || search.trim().isEmpty())
                model.addRow(new Object[]{book.title, book.author, book.price, book.qty});
        }
    }//GEN-LAST:event_OKButtonActionPerformed

    private void CHPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CHPasswordActionPerformed
        // TODO add your handling code here:
        JPasswordField pf = new JPasswordField();
        DialogFrame button = new DialogFrame();
        final JComponent[] inputs = new JComponent[] {
                new JLabel("Enter new password: "),
                pf
        };
        int option = JOptionPane.showConfirmDialog(null, inputs, "Password change: ", JOptionPane.OK_CANCEL_OPTION);
        if(option == JOptionPane.OK_OPTION){
            char[] new_pswrd = pf.getPassword();
            if(Arrays.equals(new_pswrd, currentuser.password)){
                
                JOptionPane.showMessageDialog(
                    button, "New password matches the old password",
                    "ERROR",
                    JOptionPane.ERROR_MESSAGE);
            }
            else{
                
                DBOps.changePassword(new_pswrd, currentuser.login);
                DBOps.updateDB();
                JOptionPane.showMessageDialog(
                    button, "Password changed!",
                    "Success", JOptionPane.PLAIN_MESSAGE);
                currentuser.password = new_pswrd;
            }
        }
    }//GEN-LAST:event_CHPasswordActionPerformed

    private void OrderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OrderButtonActionPerformed
        // TODO add your handling code here:
        DialogFrame button = new DialogFrame();
        if(Books.getSelectionModel().isSelectionEmpty()){
            JOptionPane.showMessageDialog(
                button, "No row is selected!",
                "ERROR",
                JOptionPane.ERROR_MESSAGE);
        }
        else{
            if((int) Books.getValueAt(Books.getSelectedRow(), 3) == 0){
                JOptionPane.showMessageDialog(
                button, "Book is out of stock!!",
                "ERROR",
                JOptionPane.ERROR_MESSAGE);
            }
            else{
                for(Book book : Bookstore.books){
                    if(book.title.equals(Books.getValueAt(Books.getSelectedRow(), 0).toString()))
                    {
                        DBOps.orderBook(currentuser.login, book.title);
                        Log.userOrdersBook(currentuser.login, book.title);

                    }
                }
                DBOps.updateDB();
                        model1.setRowCount(0);
                        for(Order order : Bookstore.orders){
                            for(Book book1 : Bookstore.books){
                                if(currentuser.login.equals(order.user) && book1.title.equals(order.book)){
                                    model1.addRow(new Object[]{order.id, book1.title, book1.author, book1.price});
                                }
                            }
                        }
                        model.setRowCount(0);
                        for(Book book : Bookstore.books){
                            model.addRow(new Object[]{book.title, book.author, book.price, book.qty});
                        }
                        JOptionPane.showMessageDialog(
                        button, "Book ordered!!",
                        "Success", JOptionPane.PLAIN_MESSAGE);
            }
        }
    }//GEN-LAST:event_OrderButtonActionPerformed

    private void InfoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InfoButtonActionPerformed
        // TODO add your handling code here:
        DialogFrame button = new DialogFrame();
        if(Books.getSelectionModel().isSelectionEmpty()){
            JOptionPane.showMessageDialog(
                button, "No row is selected!",
                "ERROR",
                JOptionPane.ERROR_MESSAGE);
        }
        else{
            Book selected_book = null;
            for(Book book : Bookstore.books){
                if(book.title.equals(Books.getValueAt(Books.getSelectedRow(), 0).toString()))
                {
                    selected_book = book;
                }
            }
            
            BookDialog.setLocationRelativeTo(null);
            TitleField.setText(selected_book.title);
            AuthorField.setText(selected_book.author);
            NrOfPagesField.setText(Integer.toString(selected_book.pages));
            YearField.setText(Integer.toString(selected_book.year));
            GenreField.setText(selected_book.genre);
            PriceField.setText(Double.toString(selected_book.price));
            QuantityField.setText(Integer.toString(selected_book.qty));
            DescriptionField.setText(selected_book.description);
            BookDialog.setVisible(true);
        }
    }//GEN-LAST:event_InfoButtonActionPerformed

    private void CancOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancOrderActionPerformed
        // TODO add your handling code here:
        DialogFrame button = new DialogFrame();
        if(Orders.getSelectionModel().isSelectionEmpty()){
            JOptionPane.showMessageDialog(
                button, "No row is selected!",
                "ERROR",
                JOptionPane.ERROR_MESSAGE);
        }
        else{
            
            for(Order order : Bookstore.orders){
                if(order.id == (int) Orders.getValueAt(Orders.getSelectedRow(), 0))
                {
                    DBOps.deleteOrder(order.id, Orders.getValueAt(Orders.getSelectedRow(), 1).toString());
                    Log.userCancelsOrder(currentuser.login, order.id);
                    
                }
            }           
            DBOps.updateDB();
            model1.setRowCount(0);
            for(Order order : Bookstore.orders){
                for(Book book1 : Bookstore.books){
                    if(currentuser.login.equals(order.user) && book1.title.equals(order.book)){
                        model1.addRow(new Object[]{order.id, book1.title, book1.author, book1.price});
                    }
                }
            }
            model.setRowCount(0);
            for(Book book : Bookstore.books){
                model.addRow(new Object[]{book.title, book.author, book.price, book.qty});
            }
            
            JOptionPane.showMessageDialog(
                    button, "Order deleted!",
                    "Success", JOptionPane.PLAIN_MESSAGE);
        }
    }//GEN-LAST:event_CancOrderActionPerformed

    private void DelAccountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DelAccountActionPerformed
        // TODO add your handling code here:
        DialogFrame button = new DialogFrame();
        int n = JOptionPane.showConfirmDialog(
            button,
            "Are you sure you want to delete your account? \n" + "(All of your orders will also be deleted)",
            "Warning",
            JOptionPane.YES_NO_OPTION);
        if(n == JOptionPane.YES_OPTION){
            DBOps.deleteAccount(currentuser.login);
            Log.userDeleted(currentuser.login);
            DBOps.updateDB();
            dispose();
        }
    }//GEN-LAST:event_DelAccountActionPerformed

    private void CancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelButtonActionPerformed
        // TODO add your handling code here:
        BookDialog.setVisible(false);
    }//GEN-LAST:event_CancelButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AccountButton;
    private javax.swing.JTextField AuthorField;
    private javax.swing.JDialog BookDialog;
    private javax.swing.JTable Books;
    private javax.swing.JButton BrowseButton;
    private javax.swing.JButton CHPassword;
    private javax.swing.JButton CancOrder;
    private javax.swing.JButton CancelButton;
    private javax.swing.JButton DelAccount;
    private javax.swing.JTextArea DescriptionField;
    private javax.swing.JButton ExitButton;
    private javax.swing.JTextField GenreField;
    private javax.swing.JButton InfoButton;
    private javax.swing.JTextField NrOfPagesField;
    private javax.swing.JButton OKButton;
    private javax.swing.JButton OrderButton;
    private javax.swing.JTable Orders;
    private javax.swing.JTextField PriceField;
    private javax.swing.JTextField QuantityField;
    private javax.swing.JTextField SearchField;
    private javax.swing.JTextField TitleField;
    private javax.swing.JTextField YearField;
    private javax.swing.JPanel accountPanel;
    private javax.swing.JPanel browsePanel;
    private javax.swing.JPanel cardPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JLabel username;
    // End of variables declaration//GEN-END:variables
}
